modeplantdrysteppe <- mode(ants$AntSpecies)
cat("The mean number of ant species is", meanplantdrysteppe, "\n")
cat("The median number of ant species is", medianants, "\n")
cat("The mode number of ant species is", modeants, "\n")
drysteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drysteppe$PlantCov)
medianPlantDrySteppe <- median(rysteppe$PlantCov)
drysteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drysteppe$PlantCov)
medianPlantDrySteppe <- median(drysteppe$PlantCov)
modePlantDrySteppe <- mode(rysteppe$PlantCov)
drysteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drysteppe$PlantCov)
medianPlantDrySteppe <- median(drysteppe$PlantCov)
modePlantDrySteppe <- mode(drysteppe$PlantCov)
cat("The mean number of ant species is", meanPlantDrySteppe, "\n")
cat("The median number of ant species is", medianPlantDrySteppe, "\n")
cat("The mode number of ant species is", modePlantDrySteppe, "\n")
drysteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drysteppe$PlantCov)
medianPlantDrySteppe <- median(drysteppe$PlantCov)
modePlantDrySteppe <- mode(drysteppe$PlantCov)
cat("The mean percentage of total plant coverage in the Dry Steppe is", meanPlantDrySteppe, "\n")
cat("The median percentage of total plant coverage in the Dry Steppe is", medianPlantDrySteppe, "\n")
cat("The mode percentage of total plant coverage in the Dry Steppe is", modePlantDrySteppe, "\n")
drySteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drySteppe$PlantCov)
medianPlantDrySteppe <- median(drySteppe$PlantCov)
modePlantDrySteppe <- mode(drySteppe$PlantCov)
cat("The mean percentage of total plant coverage in the Dry Steppe is", meanPlantDrySteppe, "\n")
cat("The median percentage of total plant coverage in the Dry Steppe is", medianPlantDrySteppe, "\n")
cat("The mode percentage of total plant coverage in the Dry Steppe is", modePlantDrySteppe, "\n")
gobiDesert <- subset(ants, Region == "Gobi Desert")
meanPlantGobiDesert <- mean(gobiDesert$PlantCov)
medianPlantGobiDesert <- median(gobiDesert$PlantCov)
modePlantGobiDesert <- mode(gobiDesert$PlantCov)
cat("The mean percentage of total plant coverage in the Gobi Desert is", meanPlantDrySteppe, "\n")
cat("The median percentage of total plant coverage in the Gobi Desert is", medianPlantDrySteppe, "\n")
cat("The mode percentage of total plant coverage in the Gobi Desert is", modePlantDrySteppe, "\n")
gobiDesert <- subset(ants, Region == "Gobi Desert")
meanPlantGobiDesert <- mean(gobiDesert$PlantCov)
medianPlantGobiDesert <- median(gobiDesert$PlantCov)
modePlantGobiDesert <- mode(gobiDesert$PlantCov)
cat("The mean percentage of total plant coverage in the Gobi Desert is", meanPlantGobiDesert, "\n")
cat("The median percentage of total plant coverage in the Gobi Desert is", medianPlantGobiDesert, "\n")
cat("The mode percentage of total plant coverage in the Gobi Desert is", modePlantGobiDesert, "\n")
ants <- read.csv("GOBIANTS.csv", header = TRUE)
meanAnts <- mean(ants$AntSpecies)
medianAnts <- median(ants$AntSpecies)
modeAnts <- mode(ants$AntSpecies)
cat("The mean number of ant species is", meanants, "\n")
cat("The median number of ant species is", medianants, "\n")
cat("The mode number of ant species is", modeants, "\n")
zSingleNew = ((10.50 - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
zSingleNew
zSingleNew = ((10.50 - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
zSingleNew
zSingleOld = ((10.50 - mean(VoltageOld$VOLTAGE)) / sd(VoltageOld$VOLTAGE))
zSingleOld
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(VELOCITY, data = galaxy)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(data = galaxy, VELOCITY)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(data = galaxy, galaxy$VELOCITY)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY ~ galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ggplot(galaxy, aes(x = VELOCITY)) + geom_bar()
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ggplot(galaxy, aes(x = VELOCITY)) + geom_boxplot()
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ggplot(galaxy, aes(x = VELOCITY)) + geom_boxplot(color = "gold", fill = "purple")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ggplot(galaxy, aes(y = VELOCITY)) + geom_boxplot(color = "gold", fill = "purple")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "GOLD", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY > 20000, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ClusterA <- subset(galaxy$VELOCITY > 18000 $ galaxy$VELOCITY < 21000)
ClusterA <- subset(galaxy$VELOCITY > 18000 & galaxy$VELOCITY < 21000)
ClusterA <- subset(galaxy, VELOCITY > 18000 & galaxy$VELOCITY < 21000)
ClusterA
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterA
ClusterB <- subset(galaxy, VELOCITY >= 21000)
ClusterB
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterA
ClusterB <- subset(galaxy, VELOCITY >= 21000)
ClusterB
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterA
ClusterB <- subset(galaxy, VELOCITY >= 21000)
ClusterB
meanA <- mean(ClusterA)
sdA <- sd(ClusterA)
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterA
ClusterB <- subset(galaxy, VELOCITY >= 21000)
ClusterB
meanA <- mean(ClusterA)
meanA
sdA <- sd(ClusterA)
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterA
ClusterB <- subset(galaxy, VELOCITY >= 21000)
ClusterB
meanA <- mean(ClusterA$VELOCITY)
sdA <- sd(ClusterA$VELOCITY)
meanB <- mean(ClusterB$VELOCITY)
sdB <- sd(ClusterB$VELOCITY)
cat("The mean for Cluster A is", meanA, "\n")
cat("The standard deviation for Cluster A is", sdA, "\n")
cat("The mean for Cluster B is", meanB, "\n")
cat("The standard deviation for Cluster B is", sdB, "\n")
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterB <- subset(galaxy, VELOCITY >= 21000)
meanA <- mean(ClusterA$VELOCITY)
sdA <- sd(ClusterA$VELOCITY)
meanB <- mean(ClusterB$VELOCITY)
sdB <- sd(ClusterB$VELOCITY)
cat("The mean for Cluster A is", meanA, "\n")
cat("The standard deviation for Cluster A is", sdA, "\n")
cat("The mean for Cluster B is", meanB, "\n")
cat("The standard deviation for Cluster B is", sdB, "\n")
ggplot(data = ddt, aes(x = RIVER, y = LENGTH)) + geom_boxplot() + aes(fill = SPECIES) + ggtitle("Hunter DeVoe")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, knitr, plotrix, ggplot2)
mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Pareto function
pareto <- function(x, mn = "Pareto barplot", ...) {  # x is a vector
x.tab = table(x)
xx.tab = sort(x.tab, decreasing = TRUE, index.return = FALSE)
cumsum(as.vector(xx.tab)) -> cs
length(x.tab) -> lenx
bp <- barplot(xx.tab, ylim = c(0,max(cs)),las = 2)
lb <- seq(0,cs[lenx], l = 11)
axis(side = 4, at = lb, labels = paste(seq(0, 100, length = 11), "%", sep = ""), las = 1, line = -1, col = "Blue", col.axis = "Red")
for(i in 1:(lenx-1)){
segments(bp[i], cs[i], bp[i+1], cs[i+1], col = i, lwd = 2)
}
title(main = mn, ...)
}
Manual_Histogram = function(v, bins = 9, main = "Relative Frequency Histogram", ...) {
left.stop = min(v) - 0.05
right.stop = max(v) + 0.05
range = right.stop - left.stop
delta = range / bins
s = seq(left.stop, right.stop, by = delta)
cuts = cut(v, breaks = s)
tab = table(cuts)
barplot(tab / sum(tab), space = 0, main = main, las = 2, ylab = "Relative Frequency", ...)
}
GradeOverview <- read.csv("GradeWeights.csv", header = TRUE, check.names = FALSE)
kable(GradeOverview)
ddt <- read.csv("DDT-1.csv", header = TRUE)
head(ddt)
coplot(LENGTH ~ WEIGHT|RIVER*SPECIES, col = ddt$MILE, data = ddt)
m=with(ddt, as.numeric(factor(MILE)))
m
length(unique(m))
subsetSpeciesRiver <- subset(ddt, RIVER == "FCM" & SPECIES == "CCATFISH")
mean(subsetSpeciesRiver$DDT)
# Read in the MTBE dataset
MTBE <- read.csv("MTBE.csv", header = TRUE)
head(MTBE, 6)
dim(MTBE)
# Create random sample
ind <- sample(1:nrow(MTBE), 5, replace = FALSE)
# List of wells that were randomly sampled
MTBE[ind,]
MTBE <- na.omit(MTBE)
head(MTBE, 6)
subsetBedrock <- subset(MTBE, Aquifier == "Bedrock")
sd(subsetBedrock$Depth)
# Read in the MTBE dataset
Earthquake <- read.csv("EARTHQUAKE.csv", header = TRUE)
head(Earthquake, 6)
# Create random sample
ind <- sample(1:nrow(Earthquake), 30, replace = FALSE)
# List of aftershocks that were randomly sampled
Earthquake[ind,]
plot(ts(Earthquake$MAGNITUDE))
median(Earthquake$MAGNITUDE)
# Create a vector with the values recorded for each limb type
freqLimb <- c(15, 8, 63, 20)
# Compute the relative frequencies and round to 3 decimal places
relativeFrequency <- round(freqLimb / 106, 3)
relativeFrequency
RL <- c("None", "Both", "LegsO", "WheelsO")
Robot <- rep(RL, freqLimb)
pareto(Robot)
# Create a vector with the values recorded for each limb type
freqPrograms <- c(12, 32, 6)
Software <- c("Office", "Windows", "Explorer")
SoftwareSurveyed <- rep(Software, freqPrograms)
pie(table(SoftwareSurveyed), col = rainbow(3))
# Create a vector with the values recorded for each limb type
freqSecurityIssues <- c(6, 8, 22, 3, 11)
SoftwareAttacks <- c("Denial of Service", "Information Disclosure", "Remote Code Execution", "Spoofing", "Privilege Elevation")
Issues <- rep(SoftwareAttacks, freqSecurityIssues)
pareto(Issues)
swd <- read.csv("SWDEFECTS.csv", header = TRUE)
head(swd)
tab <- table(swd$defect)
rtab <- tab / sum(tab)
pie3D(rtab, labels = list("OK", "Defective"), main = "Pie plot of SWD")
Voltage <- read.csv("VOLTAGE.csv", header = TRUE)
head(Voltage, 6)
VoltageOld <- subset(Voltage, LOCATION == "OLD")
VoltageNew <- subset(Voltage, LOCATION == "NEW")
HistogramVoltageStatsOld <- read.csv("HistogramVoltageStatsOld.csv", header = TRUE, check.names = FALSE)
kable(HistogramVoltageStatsOld)
Manual_Histogram(VoltageOld$VOLTAGE)
stem(VoltageOld$VOLTAGE)
Manual_Histogram(VoltageNew$VOLTAGE)
cat("The old voltage mean:", round(mean(VoltageOld$VOLTAGE), 3), "\n")
cat("The old voltage median:", median(VoltageOld$VOLTAGE), "\n")
cat("The old voltage mode:", mode(VoltageOld$VOLTAGE), "\n")
cat("The new voltage mean:", round(mean(VoltageNew$VOLTAGE), 3), "\n")
cat("The new voltage median:", median(VoltageNew$VOLTAGE), "\n")
cat("The new voltage mode:", mode(VoltageNew$VOLTAGE), "\n")
zSingleOld = ((10.50 - mean(VoltageOld$VOLTAGE)) / sd(VoltageOld$VOLTAGE))
zSingleOld
zSingleNew = ((10.50 - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
zSingleNew
ggplot(data = VoltageOld, aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
zOld = ((VoltageOld$VOLTAGE - mean(VoltageOld$VOLTAGE)) / sd(VoltageOld$VOLTAGE))
VoltageOld$VOLTAGE[(abs(zOld) > 3)]
ggplot(data = VoltageNew, aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "BLUEVIOLET")
zOld = ((VoltageNew$VOLTAGE - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
VoltageNew$VOLTAGE[(abs(zOld) > 3)]
ggplot(data = Voltage, aes(y = VOLTAGE)) + geom_boxplot() + aes(fill = LOCATION)
RoughPipe <- c(1.72, 2.50, 2.16, 2.13, 1.06, 2.24, 2.31, 2.03, 1.09, 1.40, 2.57, 2.64, 1.26, 2.05, 1.19, 2.13, 1.27, 1.51, 2.41, 1.95)
meanPipe <- round(mean(RoughPipe), 3)
sdPipe <- round(sd(RoughPipe), 3)
cat("The mean is", meanPipe, "\n")
cat("The standard deviation is", sdPipe, "\n")
ants <- read.csv("GOBIANTS.csv", header = TRUE)
meanAnts <- mean(ants$AntSpecies)
medianAnts <- median(ants$AntSpecies)
modeAnts <- mode(ants$AntSpecies)
cat("The mean number of ant species is", meanAnts, "\n")
cat("The median number of ant species is", medianAnts, "\n")
cat("The mode number of ant species is", modeAnts, "\n")
drySteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drySteppe$PlantCov)
medianPlantDrySteppe <- median(drySteppe$PlantCov)
modePlantDrySteppe <- mode(drySteppe$PlantCov)
cat("The mean percentage of total plant coverage in the Dry Steppe is", meanPlantDrySteppe, "\n")
cat("The median percentage of total plant coverage in the Dry Steppe is", medianPlantDrySteppe, "\n")
cat("The mode percentage of total plant coverage in the Dry Steppe is", modePlantDrySteppe, "\n")
gobiDesert <- subset(ants, Region == "Gobi Desert")
meanPlantGobiDesert <- mean(gobiDesert$PlantCov)
medianPlantGobiDesert <- median(gobiDesert$PlantCov)
modePlantGobiDesert <- mode(gobiDesert$PlantCov)
cat("The mean percentage of total plant coverage in the Gobi Desert is", meanPlantGobiDesert, "\n")
cat("The median percentage of total plant coverage in the Gobi Desert is", medianPlantGobiDesert, "\n")
cat("The mode percentage of total plant coverage in the Gobi Desert is", modePlantGobiDesert, "\n")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
galaxy
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterB <- subset(galaxy, VELOCITY >= 21000)
meanA <- mean(ClusterA$VELOCITY)
sdA <- sd(ClusterA$VELOCITY)
meanB <- mean(ClusterB$VELOCITY)
sdB <- sd(ClusterB$VELOCITY)
cat("The mean for Cluster A is", meanA, "\n")
cat("The standard deviation for Cluster A is", sdA, "\n")
cat("The mean for Cluster B is", meanB, "\n")
cat("The standard deviation for Cluster B is", sdB, "\n")
ggplot(data = ddt, aes(x = RIVER, y = LENGTH)) + geom_boxplot() + aes(fill = SPECIES) + ggtitle("Hunter DeVoe")
# CLEAN UP #################################################
# Clear environment
rm(list = ls())
# Clear packages
p_unload(all)  # Remove all add-ons
# Clear plots
dev.off()  # But only if there IS a plot
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, knitr, plotrix, ggplot2)
mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Pareto function
pareto <- function(x, mn = "Pareto barplot", ...) {  # x is a vector
x.tab = table(x)
xx.tab = sort(x.tab, decreasing = TRUE, index.return = FALSE)
cumsum(as.vector(xx.tab)) -> cs
length(x.tab) -> lenx
bp <- barplot(xx.tab, ylim = c(0,max(cs)),las = 2)
lb <- seq(0,cs[lenx], l = 11)
axis(side = 4, at = lb, labels = paste(seq(0, 100, length = 11), "%", sep = ""), las = 1, line = -1, col = "Blue", col.axis = "Red")
for(i in 1:(lenx-1)){
segments(bp[i], cs[i], bp[i+1], cs[i+1], col = i, lwd = 2)
}
title(main = mn, ...)
}
Manual_Histogram = function(v, bins = 9, main = "Relative Frequency Histogram", ...) {
left.stop = min(v) - 0.05
right.stop = max(v) + 0.05
range = right.stop - left.stop
delta = range / bins
s = seq(left.stop, right.stop, by = delta)
cuts = cut(v, breaks = s)
tab = table(cuts)
barplot(tab / sum(tab), space = 0, main = main, las = 2, ylab = "Relative Frequency", ...)
}
GradeOverview <- read.csv("GradeWeights.csv", header = TRUE, check.names = FALSE)
kable(GradeOverview)
ddt <- read.csv("DDT-1.csv", header = TRUE)
coplot(LENGTH ~ WEIGHT|RIVER*SPECIES, col = ddt$MILE, data = ddt)
m=with(ddt, as.numeric(factor(MILE)))
m
length(unique(m))
subsetSpeciesRiver <- subset(ddt, RIVER == "FCM" & SPECIES == "CCATFISH")
mean(subsetSpeciesRiver$DDT)
# Read in the MTBE dataset
MTBE <- read.csv("MTBE.csv", header = TRUE)
# Create random sample
ind <- sample(1:nrow(MTBE), 5, replace = FALSE)
# List of wells that were randomly sampled
MTBE[ind,]
MTBE <- na.omit(MTBE)
subsetBedrock <- subset(MTBE, Aquifier == "Bedrock")
sd(subsetBedrock$Depth)
# Read in the MTBE dataset
Earthquake <- read.csv("EARTHQUAKE.csv", header = TRUE)
# Create random sample
ind <- sample(1:nrow(Earthquake), 30, replace = FALSE)
# List of aftershocks that were randomly sampled
Earthquake[ind,]
plot(ts(Earthquake$MAGNITUDE))
median(Earthquake$MAGNITUDE)
# Create a vector with the values recorded for each limb type
freqLimb <- c(15, 8, 63, 20)
# Compute the relative frequencies and round to 3 decimal places
relativeFrequency <- round(freqLimb / 106, 3)
relativeFrequency
RL <- c("None", "Both", "LegsO", "WheelsO")
Robot <- rep(RL, freqLimb)
pareto(Robot)
# Create a vector with the values recorded for each limb type
freqPrograms <- c(12, 32, 6)
Software <- c("Office", "Windows", "Explorer")
SoftwareSurveyed <- rep(Software, freqPrograms)
pie(table(SoftwareSurveyed), col = rainbow(3))
# Create a vector with the values recorded for each limb type
freqSecurityIssues <- c(6, 8, 22, 3, 11)
SoftwareAttacks <- c("Denial of Service", "Information Disclosure", "Remote Code Execution", "Spoofing", "Privilege Elevation")
Issues <- rep(SoftwareAttacks, freqSecurityIssues)
pareto(Issues)
swd <- read.csv("SWDEFECTS.csv", header = TRUE)
tab <- table(swd$defect)
rtab <- tab / sum(tab)
pie3D(rtab, labels = list("OK", "Defective"), main = "Pie plot of SWD")
Voltage <- read.csv("VOLTAGE.csv", header = TRUE)
VoltageOld <- subset(Voltage, LOCATION == "OLD")
VoltageNew <- subset(Voltage, LOCATION == "NEW")
HistogramVoltageStatsOld <- read.csv("HistogramVoltageStatsOld.csv", header = TRUE, check.names = FALSE)
kable(HistogramVoltageStatsOld)
Manual_Histogram(VoltageOld$VOLTAGE)
stem(VoltageOld$VOLTAGE)
Manual_Histogram(VoltageNew$VOLTAGE)
cat("The old voltage mean:", round(mean(VoltageOld$VOLTAGE), 3), "\n")
cat("The old voltage median:", median(VoltageOld$VOLTAGE), "\n")
cat("The old voltage mode:", mode(VoltageOld$VOLTAGE), "\n")
cat("The new voltage mean:", round(mean(VoltageNew$VOLTAGE), 3), "\n")
cat("The new voltage median:", median(VoltageNew$VOLTAGE), "\n")
cat("The new voltage mode:", mode(VoltageNew$VOLTAGE), "\n")
zSingleOld = ((10.50 - mean(VoltageOld$VOLTAGE)) / sd(VoltageOld$VOLTAGE))
zSingleOld
zSingleNew = ((10.50 - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
zSingleNew
ggplot(data = VoltageOld, aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
zOld = ((VoltageOld$VOLTAGE - mean(VoltageOld$VOLTAGE)) / sd(VoltageOld$VOLTAGE))
VoltageOld$VOLTAGE[(abs(zOld) > 3)]
ggplot(data = VoltageNew, aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "BLUEVIOLET")
zOld = ((VoltageNew$VOLTAGE - mean(VoltageNew$VOLTAGE)) / sd(VoltageNew$VOLTAGE))
VoltageNew$VOLTAGE[(abs(zOld) > 3)]
ggplot(data = Voltage, aes(y = VOLTAGE)) + geom_boxplot() + aes(fill = LOCATION)
RoughPipe <- c(1.72, 2.50, 2.16, 2.13, 1.06, 2.24, 2.31, 2.03, 1.09, 1.40, 2.57, 2.64, 1.26, 2.05, 1.19, 2.13, 1.27, 1.51, 2.41, 1.95)
meanPipe <- round(mean(RoughPipe), 3)
sdPipe <- round(sd(RoughPipe), 3)
cat("The mean is", meanPipe, "\n")
cat("The standard deviation is", sdPipe, "\n")
ants <- read.csv("GOBIANTS.csv", header = TRUE)
meanAnts <- mean(ants$AntSpecies)
medianAnts <- median(ants$AntSpecies)
modeAnts <- mode(ants$AntSpecies)
cat("The mean number of ant species is", meanAnts, "\n")
cat("The median number of ant species is", medianAnts, "\n")
cat("The mode number of ant species is", modeAnts, "\n")
drySteppe <- subset(ants, Region == "Dry Steppe")
meanPlantDrySteppe <- mean(drySteppe$PlantCov)
medianPlantDrySteppe <- median(drySteppe$PlantCov)
modePlantDrySteppe <- mode(drySteppe$PlantCov)
cat("The mean percentage of total plant coverage in the Dry Steppe is", meanPlantDrySteppe, "\n")
cat("The median percentage of total plant coverage in the Dry Steppe is", medianPlantDrySteppe, "\n")
cat("The mode percentage of total plant coverage in the Dry Steppe is", modePlantDrySteppe, "\n")
gobiDesert <- subset(ants, Region == "Gobi Desert")
meanPlantGobiDesert <- mean(gobiDesert$PlantCov)
medianPlantGobiDesert <- median(gobiDesert$PlantCov)
modePlantGobiDesert <- mode(gobiDesert$PlantCov)
cat("The mean percentage of total plant coverage in the Gobi Desert is", meanPlantGobiDesert, "\n")
cat("The median percentage of total plant coverage in the Gobi Desert is", medianPlantGobiDesert, "\n")
cat("The mode percentage of total plant coverage in the Gobi Desert is", modePlantGobiDesert, "\n")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
ClusterA <- subset(galaxy, galaxy$VELOCITY < 21000)
ClusterB <- subset(galaxy, VELOCITY >= 21000)
meanA <- mean(ClusterA$VELOCITY)
sdA <- sd(ClusterA$VELOCITY)
meanB <- mean(ClusterB$VELOCITY)
sdB <- sd(ClusterB$VELOCITY)
cat("The mean for Cluster A is", meanA, "\n")
cat("The standard deviation for Cluster A is", sdA, "\n")
cat("The mean for Cluster B is", meanB, "\n")
cat("The standard deviation for Cluster B is", sdB, "\n")
ggplot(data = ddt, aes(x = RIVER, y = LENGTH)) + geom_boxplot() + aes(fill = SPECIES) + ggtitle("Hunter DeVoe")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, knitr, plotrix, ggplot2)
mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Pareto function
pareto <- function(x, mn = "Pareto barplot", ...) {  # x is a vector
x.tab = table(x)
xx.tab = sort(x.tab, decreasing = TRUE, index.return = FALSE)
cumsum(as.vector(xx.tab)) -> cs
length(x.tab) -> lenx
bp <- barplot(xx.tab, ylim = c(0,max(cs)),las = 2)
lb <- seq(0,cs[lenx], l = 11)
axis(side = 4, at = lb, labels = paste(seq(0, 100, length = 11), "%", sep = ""), las = 1, line = -1, col = "Blue", col.axis = "Red")
for(i in 1:(lenx-1)){
segments(bp[i], cs[i], bp[i+1], cs[i+1], col = i, lwd = 2)
}
title(main = mn, ...)
}
Manual_Histogram = function(v, bins = 9, main = "Relative Frequency Histogram", ...) {
left.stop = min(v) - 0.05
right.stop = max(v) + 0.05
range = right.stop - left.stop
delta = range / bins
s = seq(left.stop, right.stop, by = delta)
cuts = cut(v, breaks = s)
tab = table(cuts)
barplot(tab / sum(tab), space = 0, main = main, las = 2, ylab = "Relative Frequency", ...)
}
plot(ts(Earthquake$MAGNITUDE))
plot(ts(Earthquake$MAGNITUDE), ylab = "Magnitude")
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
plot(galaxy$VELOCITY, bg = "Purple", pch = 21)
galaxy <- read.csv("GALAXY2.csv", header = TRUE)
plot(galaxy$VELOCITY, bg = "Purple", pch = 21, ylab = "Velocity")
ggplot(data = VoltageOld, aes(y = VOLTAGE), ylab = "Voltage") + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
ggplot(data = VoltageOld, aes(y = VOLTAGE), ylab("Voltage")) + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
ggplot(data = VoltageOld, aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3", ylab = "Voltage")
ggplot(data = VoltageOld, aes(y = VOLTAGE), ylab = "Voltage") + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
ggplot(data = VoltageOld, ylab = "Voltage", aes(y = VOLTAGE)) + geom_boxplot(col = "BLACK", fill = "CHOCOLATE3")
